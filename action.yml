name: 'Organization workflow action'
description: 'Action to register organization workflow'
branding:
  icon: 'check-circle'
  color: 'white'
inputs:
  run_id: 
    description: 'ID of workflow run (provided via GitHub syntax `github.run_id`)'
    required: true
  name: 
    description: 'Name of check (Use `github.workflow` to use the name of the workflow)'
    required: true
  sha:
    description: 'Sha of original commit (provided by GitHub app via `github.event.client_payload.sha`)'
    required: true
  branch: 
    description: 'branch of original commit (provided by GitHub app via `github.event.client_payload.branch`)'
    required: true
  repository_owner:
    description: 'repositroy_owner of original commit (provided by GitHub app via `github.event.client_payload.repository.owner`)'
    required: true
  repository_name:
    description: 'repositroy_name of original commit (provided by GitHub app via `github.event.client_payload.repository.name`)'
    required: true
  event_type:
    description: 'event_type triggered by the GitHub App (provided by GitHub app via `github.event.client_payload.event_type`)'
    required: true
  enforce: 
    description: 'Enforce [required status check](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/enabling-required-status-checks)'
    required: false
    default: "false"
  enforce_admin: 
    description: 'Enforce [required status check](https://docs.github.com/en/free-pro-team@latest/github/administering-a-repository/enabling-required-status-checks) for admins'
    required: false
    default: "false"
  token: 
    description: 'GitHub Token'
    required: true
runs:
  using: "composite"
  steps: 
    - uses: LouisBrunner/checks-action@v1.6.1 # <-- Should not use 3rd party action!
      name: Create checks run
      id: create_checks_run
      with:
        token: ${{ inputs.token }}
        repo: ${{ inputs.repository_owner }}/${{ inputs.repository_name }}
        sha: ${{ inputs.sha }}
        name: ${{ env.name || github.workflow }}
        status: 'in_progress'
    - name: Create metadata
      id: create-metadata-json
      run: |
        echo '{
          "check_run_type": "${{ inputs.event_type }}",
          "repository_name": "${{ inputs.repository_name }}",
          "check_run_id": ${{ steps.create_checks_run.outputs.check_id }}
        }' > workflow-metadata.json
      shell: bash
    - name: Save metadata
      uses: actions/upload-artifact@v3
      with:
        name: workflow-metadata
        path: workflow-metadata.json
